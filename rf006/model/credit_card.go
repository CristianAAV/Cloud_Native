package model

import (
	"time"

	"github.com/gin-gonic/gin"
)

type Body struct {
	CardNumber     string
	Cvv            string
	ExpirationDate string
	CardHolderName string
}

func (b Body) IsValid() bool {
	hasCardNumber := b.CardNumber != ""
	hasCardHolder := b.CardHolderName != ""
	hasCVV := b.Cvv != ""
	hasExpirationDate := b.ExpirationDate != ""
	return hasCardNumber && hasCardHolder && hasCVV && hasExpirationDate
}

type UserDatastore struct {
	UserId      string
	CreditCards []CreditCardEntity
}

type CreditCardTrueNative struct {
	RUV                   string
	Token                 string
	Issuer                string
	TransactionIdentifier string
	CreatedAt             string
}

type VerifyCreditCardRespoonse struct {
	RUV                   string
	CreatedAt             string
	TransactionIdentifier string
	Status                string
}

type CreditCardEntity struct {
	ID             string `gorm:"type:uuid;primary_key;default:uuid_generate_v4();column:id"` // Unique identifier for the credit card operation in UUID format.
	Token          string // Token generated by the payment platform with a length of 256 characters.
	UserId         string
	LastFourDigits string    // Last 4 digits of the credit card number.
	Issuer         string    // Unique verification record, which can be: VISA, MASTERCARD, AMERICAN EXPRESS, DINERS CLUB, UNIONPAY, DISCOVER, JCB, VERVE.
	Status         string    // Card status (valid options to configure).
	CreatedAt      time.Time // Date and time of credit card creation.
	UpdatedAt      time.Time // Date and time of credit card update.
}

func (c CreditCardEntity) ParseToDTO() gin.H {
	return gin.H{
		"id":             c.ID,
		"token":          c.Token,
		"userId":         c.UserId,
		"lastFourDigits": c.LastFourDigits,
		"issuer":         c.Issuer,
		"status":         c.Status,
		"createdAt":      c.CreatedAt,
		"updatedAt":      c.UpdatedAt,
	}
}

const (
	POR_VERIFICAR = "POR_VERIFICAR"
	RECHAZADA     = "RECHAZADA"
	APROBADA      = "APROBADA"
)

func ParseToAceptada(s string) string {
	if s == APROBADA {
		return "ACEPTADA"
	}
	return s
}
