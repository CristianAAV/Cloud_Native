###################################
# USER-MANAGEMENT
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-management
  labels:
    app: user-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-management

  template:
    metadata:
      labels:
        app: user-management
    spec:
      containers:
        - name: user-management
          image: us-docker.pkg.dev/uandes-native-433403/cloud-native-xcode/user-management:1.0
          env:
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: db_user
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: db_pass
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: db_host
            - name: "DB_PORT"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: db_port
            - name: "DB_NAME"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: db_name
          ports:
            - containerPort: 3000
          imagePullPolicy: Always
      volumes:
        - name: appsecrets-volume
          secret:
            secretName: appsecrets
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: user-management-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3000
    type: HTTP
    requestPath: /users/ping
---
kind: Service
apiVersion: v1
metadata:
  name: user-management-service
  annotations:
    cloud.google.com/backend-config: '{"default": "user-management-config"}'  
spec:
  type: NodePort
  selector:
    app: user-management
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
      nodePort: 31017
###################################
# POST-MANAGEMENT
###################################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: post-management
  labels:
    app: post-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: post-management

  template:
    metadata:
      labels:
        app: post-management
    spec:
      containers:
        - name: post-management
          image: us-docker.pkg.dev/uandes-native-433403/cloud-native-xcode/post_management:0.0.0
          env:
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: db_user
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: db_pass
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: db_host
            - name: "DB_PORT"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: db_port
            - name: "DB_NAME"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: db_name
            - name: "USERS_PATH"
              value: "http://user-management-service"
            - name: "USERS_PATH"
              value: "http://user-management-service"
            - name: "POSTS_PATH"
              value: "http://post-management-service"
            - name: "ROUTES_PATH"
              value: "http://route-management-service"
            - name: "OFFERS_PATH"
              value: "http://offer-management-service"
            - name: "SCORES_PATH"
              value: "http://scores-service"
          ports:
            - containerPort: 3001
          imagePullPolicy: Always
      volumes:
        - name: appsecrets-volume
          secret:
            secretName: appsecrets
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: post-management-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3001
    type: HTTP
    requestPath: /posts/ping
---
kind: Service
apiVersion: v1
metadata:
  name: post-management-service
  annotations:
    cloud.google.com/backend-config: '{"default": "post-management-config"}'  
spec:
  type: NodePort
  selector:
    app: post-management
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3001
      nodePort: 31018

---
##############
### ROUTE ### 
##############

apiVersion: apps/v1
kind: Deployment
metadata:
  name: route-management
  labels:
    app: route-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: route-management
  template:
    metadata:
      labels:
        app: route-management
    spec:
      containers:
        - name: route-management
          image: us-docker.pkg.dev/uandes-native-433403/cloud-native-xcode/routes_management:0.0.0
          ports:
            - containerPort: 3002
          env:
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: db_user
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: db_pass
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: db_host
            - name: "DB_PORT"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: db_port
            - name: "DB_NAME"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: db_name
            - name: "USERS_PATH"
              value: "http://user-management-service"
            - name: "POSTS_PATH"
              value: "http://post-management-service"
            - name: "ROUTES_PATH"
              value: "http://route-management-service"
            - name: "OFFERS_PATH"
              value: "http://offer-management-service"
            - name: "SCORES_PATH"
              value: "http://scores-service"
          imagePullPolicy: Always
      volumes:
        - name: appsecrets-volume
          secret:
            secretName: appsecrets
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: route-management-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3002
    type: HTTP
    requestPath: /routes/ping
---
kind: Service
apiVersion: v1
metadata:
  name: route-management-service
  annotations:
    cloud.google.com/backend-config: '{"default": "route-management-config"}'
spec:
  type: NodePort
  selector:
    app: route-management
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3002
      nodePort: 32020

---
##############
### OFFER ### 
##############

apiVersion: apps/v1
kind: Deployment
metadata:
  name: offer-management
  labels:
    app: offer-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: offer-management
  template:
    metadata:
      labels:
        app: offer-management
    spec:
      containers:
        - name: offer-management
          image: us-docker.pkg.dev/uandes-native-433403/cloud-native-xcode/offer_management_container:1.0.4
          ports:
            - containerPort: 3003
          env:
            - name: "DB_USER"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: db_user
            - name: "DB_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: db_pass
            - name: "DB_HOST"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: db_host
            - name: "DB_PORT"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: db_port
            - name: "DB_NAME"
              valueFrom:
                secretKeyRef:
                  name: appsecrets 
                  key: db_name
            - name: "USERS_PATH"
              value: "http://user-management-service"
            - name: "POSTS_PATH"
              value: "http://post-management-service"
            - name: "ROUTES_PATH"
              value: "http://route-management-service"
            - name: "OFFERS_PATH"
              value: "http://offer-management-service"
            - name: "SCORES_PATH"
              value: "http://scores-service"
          imagePullPolicy: Always
      volumes:
        - name: appsecrets-volume
          secret:
            secretName: appsecrets
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: offer-management-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3003
    type: HTTP
    requestPath: /offers/ping
---
kind: Service
apiVersion: v1
metadata:
  name: offer-management-service
  annotations:
    cloud.google.com/backend-config: '{"default": "offer-management-config"}'
spec:
  type: NodePort
  selector:
    app: offer-management
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3003
      nodePort: 32021